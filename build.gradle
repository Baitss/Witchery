buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "https://maven.minecraftforge.net/"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
        // maven {
        //     url = "https://jitpack.io"
        // }
    }
    dependencies {
        classpath ('com.anatawa12.forge:ForgeGradle:1.2-1.0.+')
    }
}

apply plugin: 'forge'

version = "1.7.10-0.24.1"
group= "com.emoniph.witchery" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "witchery"

sourceCompatibility = 7
targetCompatibility = 7

minecraft {
    version = "1.7.10-10.13.4.1614-1.7.10"
	if (file('../run').exists()){
		assetDir = "../run/assets"
	}else{
		assetDir = "assets"
	}
}

repositories {
	maven {
		name = 'ModMaven'
		url = 'https://modmaven.dev'
	}
	maven {
		name = "gt"
		url = "https://gregtech.mechaenetia.com/"
	}
}

dependencies
{
	compile "codechicken:CodeChickenCore:1.7.10-1.0.7.47:dev"
	compile 'codechicken:CodeChickenLib:1.7.10-1.1.3.140:dev'
	compile 'codechicken:NotEnoughItems:1.7.10-1.0.5.120:dev'
	compile fileTree(dir: "libs", include: "*.jar")
}


processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

jar {
    manifest {
        attributes 'FMLAT': 'witchery_at.cfg'
    }
    include 'META-INF/witchery_at.cfg'
    include '**/*'
}
